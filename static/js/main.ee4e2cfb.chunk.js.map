{"version":3,"sources":["Components/ContactAddForm/ContactAddForm.styled.jsx","Components/ContactAddForm/ContactAddForm.jsx","Components/ContactListItem/ContactListItem.styled.jsx","Components/ContactListItem/ContactListItem.jsx","Components/App.jsx","index.js"],"names":["ContactAddFormEl","styled","form","ContactAddForm","handleSubmit","name","handleNameChange","number","handlePhoneChange","onSubmit","type","pattern","title","required","value","onChange","ContactListItemEl","li","ContactListItem","App","state","contacts","id","filter","nameInput","target","setState","PhoneInput","handleFilterChange","filterInput","getFilteredNames","normilizedFilterState","toLowerCase","contact","includes","e","preventDefault","prevState","uuidv4","this","filteredContactNames","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAKeA,EAHUC,IAAOC,KAAV,8C,OCoCPC,I,EAAAA,EApCf,YAMI,IALFC,EAKC,EALDA,aACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,iBACAC,EAEC,EAFDA,OACAC,EACC,EADDA,kBAEA,OACE,eAAC,EAAD,CAAkBC,SAAUL,EAA5B,UACE,yCAEE,uBACEM,KAAK,OACLL,KAAK,OACLM,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,MAAOT,EACPU,SAAUT,OAGd,2CAEE,uBACEI,KAAK,MACLL,KAAK,MACLQ,UAAQ,EACRC,MAAOP,EACPQ,SAAUP,OAGd,qDC7BSQ,EAFWf,IAAOgB,GAAV,0BCQRC,MARf,YAA4C,IAAjBb,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,OAC/B,OACE,eAAC,EAAD,WACGF,EADH,KACWE,MCAMY,E,4MACnBC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQjB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEe,GAAI,OAAQjB,KAAM,iBAAkBE,OAAQ,aAC9C,CAAEe,GAAI,OAAQjB,KAAM,gBAAiBE,OAAQ,aAC7C,CAAEe,GAAI,OAAQjB,KAAM,iBAAkBE,OAAQ,cAEhDgB,OAAQ,GACRlB,KAAM,GACNE,OAAQ,I,EAGVD,iBAAmB,YAAiB,IAC5BkB,EAD2B,EAAbC,OACKX,MACzB,EAAKY,SAAS,CACZrB,KAAMmB,K,EAIVhB,kBAAoB,YAAiB,IAC7BmB,EAD4B,EAAbF,OACKX,MAC1B,EAAKY,SAAS,CACZnB,OAAQoB,K,EAIZC,mBAAqB,YAAiB,IAC9BC,EAD6B,EAAbJ,OACKX,MAC3B,EAAKY,SAAS,CACZH,OAAQM,K,EAIZC,iBAAmB,WACjB,MAA6B,EAAKV,MAA1BG,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,SACVU,EAAwBR,EAAOS,cAErC,OAAOX,EAASE,QAAO,SAACU,GAAD,OACrBA,EAAQ5B,KAAK2B,cAAcE,SAASH,O,EAIxC3B,aAAe,SAAC+B,GACdA,EAAEC,iBACF,EAAKV,UAAS,SAACW,GAAD,MAAgB,CAC5BhB,SAAS,GAAD,mBACHgB,EAAUhB,UADP,CAEN,CAAEhB,KAAM,EAAKe,MAAMf,KAAMiB,GAAIgB,cAAU/B,OAAQ,EAAKa,MAAMb,cAG9D,EAAKmB,SAAS,CACZrB,KAAM,GACNE,OAAQ,M,4CAIZ,WACE,MAAiCgC,KAAKnB,MAA9Bf,EAAR,EAAQA,KAAME,EAAd,EAAcA,OAAQgB,EAAtB,EAAsBA,OAEhBiB,EAAuBD,KAAKT,mBAElC,OACE,qCACE,2CAEA,cAAC,EAAD,CACE1B,aAAcmC,KAAKnC,aACnBC,KAAMA,EACNC,iBAAkBiC,KAAKjC,iBACvBC,OAAQA,EACRC,kBAAmB+B,KAAK/B,oBAG1B,0CAEA,0DAEE,uBACEE,KAAK,OACLL,KAAK,SACLS,MAAOS,EACPR,SAAUwB,KAAKX,wBAInB,6BACGY,EAAqBC,KAAI,SAACR,GAAD,OACxB,cAAC,EAAD,CAEE5B,KAAM4B,EAAQ5B,KACdE,OAAQ0B,EAAQ1B,QAFX0B,EAAQX,gB,GAzFMoB,a,MCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee4e2cfb.chunk.js","sourcesContent":["import styled from '@emotion/styled'\n\nconst ContactAddFormEl = styled.form`\n  display: flex;\n`\nexport default ContactAddFormEl\n","import ContactAddFormEl from './ContactAddForm.styled'\n\nfunction ContactAddForm({\n  handleSubmit,\n  name,\n  handleNameChange,\n  number,\n  handlePhoneChange,\n}) {\n  return (\n    <ContactAddFormEl onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"tel\"\n          required\n          value={number}\n          onChange={handlePhoneChange}\n        ></input>\n      </label>\n      <button>Add Contact</button>\n    </ContactAddFormEl>\n  )\n}\n\nexport default ContactAddForm\n","import styled from '@emotion/styled'\n\nconst ContactListItemEl = styled.li``\n\nexport default ContactListItemEl\n","import ContactListItemEl from '../ContactListItem/ContactListItem.styled'\n\nfunction ContactListItem({ name, number }) {\n  return (\n    <ContactListItemEl>\n      {name}: {number}\n    </ContactListItemEl>\n  )\n}\n\nexport default ContactListItem\n","import { Component } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport ContactAddForm from './ContactAddForm/ContactAddForm'\nimport ContactListItem from './ContactListItem/ContactListItem'\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  }\n\n  handleNameChange = ({ target }) => {\n    const nameInput = target.value\n    this.setState({\n      name: nameInput,\n    })\n  }\n\n  handlePhoneChange = ({ target }) => {\n    const PhoneInput = target.value\n    this.setState({\n      number: PhoneInput,\n    })\n  }\n\n  handleFilterChange = ({ target }) => {\n    const filterInput = target.value\n    this.setState({\n      filter: filterInput,\n    })\n  }\n\n  getFilteredNames = () => {\n    const { filter, contacts } = this.state\n    const normilizedFilterState = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normilizedFilterState),\n    )\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.setState((prevState) => ({\n      contacts: [\n        ...prevState.contacts,\n        { name: this.state.name, id: uuidv4(), number: this.state.number },\n      ],\n    }))\n    this.setState({\n      name: '',\n      number: '',\n    })\n  }\n\n  render() {\n    const { name, number, filter } = this.state\n\n    const filteredContactNames = this.getFilteredNames()\n\n    return (\n      <>\n        <h2>Phonebook</h2>\n\n        <ContactAddForm\n          handleSubmit={this.handleSubmit}\n          name={name}\n          handleNameChange={this.handleNameChange}\n          number={number}\n          handlePhoneChange={this.handlePhoneChange}\n        />\n\n        <h2>Contacts</h2>\n\n        <label>\n          Find contacts by name\n          <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={this.handleFilterChange}\n          ></input>\n        </label>\n\n        <ul>\n          {filteredContactNames.map((contact) => (\n            <ContactListItem\n              key={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n        </ul>\n      </>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}